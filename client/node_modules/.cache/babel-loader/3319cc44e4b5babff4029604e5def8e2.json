{"ast":null,"code":"var _jsxFileName = \"/Users/date/Documents/Programming/ReactJS/strapi/client/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport { strapi, apiUrl } from '../Api/Strapi';\nimport { Link } from 'react-router-dom';\n\nfunction Search({\n  handleChange\n}) {\n  return React.createElement(\"form\", {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChangetype: \"text\",\n    class: \"form-control\",\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      brands: []\n    };\n\n    this.showBrands = brands => brands.map(brand => React.createElement(\"div\", {\n      key: brand._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, brand.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, brand.description), React.createElement(Link, {\n      className: \"read-more\",\n      href: `/${brand._id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"More...\"), React.createElement(\"img\", {\n      src: `${apiUrl}${brand.image.url}`,\n      className: \"img-fluid\",\n      alt: `${brand.name} image`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })));\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await strapi.request('POST', '/graphql', {\n        data: {\n          query: data\n        }\n      });\n      this.setState(() => ({\n        brands: [...response.data.brands]\n      }));\n      console.log(response.data.brands, \"Respone from GraphQl\");\n    } catch (err) {\n      console.error('GRAPHQL GET BRAND ERROR: ', err);\n    }\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    console.log(e.target.value);\n  }\n\n  render() {\n    console.log(this.state.brands);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Brands\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Check out our Brands Collection.\"))), React.createElement(Search, {\n      handleChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), this.state.brands.length > 0 ? this.showBrands(this.state.brands) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}\n\nexport default App;\nconst data = `query {\n  brands {\n    _id\n    name\n    description\n    image {\n      url\n    }\n  }\n}`;","map":{"version":3,"sources":["/Users/date/Documents/Programming/ReactJS/strapi/client/src/components/App/App.js"],"names":["React","Component","strapi","apiUrl","Link","Search","handleChange","App","state","brands","showBrands","map","brand","_id","name","description","image","url","componentDidMount","response","request","data","query","setState","console","log","err","error","e","preventDefault","target","value","render","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,eAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,MAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAgC;AAE9B,SACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,YAAY,EAAC,MAApB;AAA2B,IAAA,KAAK,EAAC,cAAjC;AAAgD,IAAA,WAAW,EAAC,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF;AAKD;;AAED,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAE;AADF,KAFkB;;AAAA,SA+B1BC,UA/B0B,GA+BZD,MAAD,IACXA,MAAM,CAACE,GAAP,CAAYC,KAAK,IACf;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,KAAK,CAACE,IAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIF,KAAK,CAACG,WAAV,CAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,IAAI,EAAG,IAAGH,KAAK,CAACC,GAAI,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAK,MAAA,GAAG,EAAG,GAAEV,MAAO,GAAES,KAAK,CAACI,KAAN,CAAYC,GAAI,EAAtC;AAAyC,MAAA,SAAS,EAAC,WAAnD;AAA+D,MAAA,GAAG,EAAG,GAAEL,KAAK,CAACE,IAAK,QAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CAhCwB;AAAA;;AAM1B,QAAMI,iBAAN,GAA0B;AAExB,QAAI;AAEF,YAAMC,QAAQ,GAAG,MAAMjB,MAAM,CAACkB,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AACxDC,QAAAA,IAAI,EAAE;AAAEC,UAAAA,KAAK,EAAED;AAAT;AADkD,OAAnC,CAAvB;AAIA,WAAKE,QAAL,CAAc,OAAO;AAAEd,QAAAA,MAAM,EAAE,CAAE,GAAGU,QAAQ,CAACE,IAAT,CAAcZ,MAAnB;AAAV,OAAP,CAAd;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACE,IAAT,CAAcZ,MAA1B,EAAkC,sBAAlC;AAGD,KAVD,CAUE,OAAOiB,GAAP,EAAY;AAEZF,MAAAA,OAAO,CAACG,KAAR,CAAc,2BAAd,EAA2CD,GAA3C;AAED;AAEF;;AAEDpB,EAAAA,YAAY,CAACsB,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAC,CAACE,MAAF,CAASC,KAArB;AACD;;AAaDC,EAAAA,MAAM,GAAG;AAEPR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWC,MAAvB;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAFF,CADF,CADF,EAOA,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,KAAKH,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAQE,KAAKE,KAAL,CAAWC,MAAX,CAAkBwB,MAAlB,GAA2B,CAA3B,GAAgC,KAAKvB,UAAL,CAAgB,KAAKF,KAAL,CAAWC,MAA3B,CAAhC,GAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARvE,CADF;AAYD;;AA1DyB;;AA6D5B,eAAeF,GAAf;AAEA,MAAMc,IAAI,GAAI;;;;;;;;;EAAd","sourcesContent":["import React, { Component } from 'react';\nimport { strapi, apiUrl } from '../Api/Strapi';\nimport { Link } from 'react-router-dom';\n\nfunction Search({handleChange}) {\n\n  return(\n    <form className=\"mb-3\">\n        <input onChangetype=\"text\" class=\"form-control\" placeholder=\"Search\" />\n    </form>\n  );\n}\n\nclass App extends Component {\n\n  state = {\n    brands: []\n  }\n\n  async componentDidMount() {\n\n    try {\n      \n      const response = await strapi.request('POST', '/graphql', {\n        data: { query: data }\n      });\n  \n      this.setState(() => ({ brands: [ ...response.data.brands ] }))\n      console.log(response.data.brands, \"Respone from GraphQl\");\n\n\n    } catch (err) {\n\n      console.error('GRAPHQL GET BRAND ERROR: ', err);\n\n    }\n    \n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    console.log(e.target.value)\n  }\n\n  showBrands = (brands) => (\n    brands.map( brand => ( \n      <div key={brand._id}>\n        <h2>{brand.name}</h2>\n        <p>{brand.description}</p>\n        <Link className=\"read-more\" href={`/${brand._id}`}>More...</Link>\n        <img src={`${apiUrl}${brand.image.url}`} className=\"img-fluid\" alt={`${brand.name} image`}/>\n      </div>))\n  )\n\n\n  render() {\n\n    console.log(this.state.brands);\n\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron jumbotron-fluid mt-3\">\n          <div className=\"container\">\n            <h1 className=\"display-4\">Brands</h1>\n            <p className=\"lead\">Check out our Brands Collection.</p>\n          </div>\n      </div>\n      <Search handleChange={this.handleChange}/>\n      { this.state.brands.length > 0  ? this.showBrands(this.state.brands) : <p>Loading...</p>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n\nconst data = `query {\n  brands {\n    _id\n    name\n    description\n    image {\n      url\n    }\n  }\n}`;"]},"metadata":{},"sourceType":"module"}