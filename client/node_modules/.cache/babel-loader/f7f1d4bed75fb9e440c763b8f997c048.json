{"ast":null,"code":"var _jsxFileName = \"/Users/date/Documents/Programming/ReactJS/strapi/client/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport { strapi, apiUrl } from '../Api/Strapi';\nimport { Link } from 'react-router-dom';\n\nfunction Search({\n  handleChange,\n  searchTerm\n}) {\n  return React.createElement(\"form\", {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: e => handleChange(e),\n    type: \"text\",\n    value: searchTerm,\n    className: \"form-control\",\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      brands: [],\n      searchTerm: ''\n    };\n\n    this.handleChange = e => {\n      e.target;\n      const searchTerm = e.target.value;\n      this.setState({\n        searchTerm: searchTerm\n      });\n      console.log(searchTerm);\n    };\n\n    this.showBrands = brands => brands.map(brand => React.createElement(\"div\", {\n      key: brand._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, brand.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, brand.description), React.createElement(Link, {\n      className: \"read-more\",\n      to: `/${brand._id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"More...\"), React.createElement(\"img\", {\n      src: `${apiUrl}${brand.image.url}`,\n      className: \"img-fluid\",\n      alt: `${brand.name} image`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await strapi.request('POST', '/graphql', {\n        data: {\n          query: data\n        }\n      });\n      this.setState(() => ({\n        brands: [...response.data.brands]\n      }));\n      console.log(response.data.brands, \"Respone from GraphQl\");\n    } catch (err) {\n      console.error('GRAPHQL GET BRAND ERROR: ', err);\n    }\n  }\n\n  render() {\n    console.log(this.state.brands);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"jumbotron jumbotron-fluid mt-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Brands\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Check out our Brands Collection.\"))), React.createElement(Search, {\n      handleChange: this.handleChange,\n      searchTerm: this.state.searchTerm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), this.state.brands.length > 0 ? this.showBrands(this.state.brands) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Loading...\"));\n  }\n\n}\n\nexport default App;\nconst data = `query {\n  brands {\n    _id\n    name\n    description\n    image {\n      url\n    }\n  }\n}`;","map":{"version":3,"sources":["/Users/date/Documents/Programming/ReactJS/strapi/client/src/components/App/App.js"],"names":["React","Component","strapi","apiUrl","Link","Search","handleChange","searchTerm","e","App","state","brands","target","value","setState","console","log","showBrands","map","brand","_id","name","description","image","url","componentDidMount","response","request","data","query","err","error","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { strapi, apiUrl } from '../Api/Strapi';\nimport { Link } from 'react-router-dom';\n\nfunction Search({handleChange, searchTerm}) {\n\n  return(\n    <form className=\"mb-3\">\n        <input \n          onChange={ (e) => handleChange(e) } type=\"text\" \n          value={searchTerm}\n          className=\"form-control\" \n          placeholder=\"Search\" />\n    </form>\n  );\n}\n\nclass App extends Component {\n\n  state = {\n    brands: [],\n    searchTerm: ''\n  }\n\n  async componentDidMount() {\n\n    try {\n      \n      const response = await strapi.request('POST', '/graphql', {\n        data: { query: data }\n      });\n  \n      this.setState(() => ({ brands: [ ...response.data.brands ] }))\n      console.log(response.data.brands, \"Respone from GraphQl\");\n\n\n    } catch (err) {\n\n      console.error('GRAPHQL GET BRAND ERROR: ', err);\n\n    }\n    \n  }\n\n  handleChange = (e) => {\n    e.target\n    const searchTerm = e.target.value;\n\n    this.setState({ searchTerm: searchTerm });\n\n    console.log(searchTerm)\n  }\n\n\n  showBrands = (brands) => (\n    brands.map( brand => ( \n      <div key={brand._id}>\n        <h2>{brand.name}</h2>\n        <p>{brand.description}</p>\n        <Link className=\"read-more\" to={`/${brand._id}`}>More...</Link>\n        <img src={`${apiUrl}${brand.image.url}`} className=\"img-fluid\" alt={`${brand.name} image`}/>\n      </div>))\n  )\n\n\n  render() {\n\n    console.log(this.state.brands);\n\n    return (\n      <div className=\"container\">\n        <div className=\"jumbotron jumbotron-fluid mt-3\">\n          <div className=\"container\">\n            <h1 className=\"display-4\">Brands</h1>\n            <p className=\"lead\">Check out our Brands Collection.</p>\n          </div>\n      </div>\n      <Search handleChange={this.handleChange} searchTerm={this.state.searchTerm} />\n      { this.state.brands.length > 0  ? this.showBrands(this.state.brands) : <p>Loading...</p>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n\nconst data = `query {\n  brands {\n    _id\n    name\n    description\n    image {\n      url\n    }\n  }\n}`;"]},"metadata":{},"sourceType":"module"}